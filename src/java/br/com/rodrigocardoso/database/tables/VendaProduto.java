/*
 * This file is generated by jOOQ.
*/
package br.com.rodrigocardoso.database.tables;


import br.com.rodrigocardoso.database.Indexes;
import br.com.rodrigocardoso.database.Keys;
import br.com.rodrigocardoso.database.Public;
import br.com.rodrigocardoso.database.tables.records.VendaProdutoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VendaProduto extends TableImpl<VendaProdutoRecord> {

    private static final long serialVersionUID = -1395426675;

    /**
     * The reference instance of <code>public.venda_produto</code>
     */
    public static final VendaProduto VENDA_PRODUTO = new VendaProduto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VendaProdutoRecord> getRecordType() {
        return VendaProdutoRecord.class;
    }

    /**
     * The column <code>public.venda_produto.created_date</code>.
     */
    public final TableField<VendaProdutoRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.venda_produto.created_user</code>.
     */
    public final TableField<VendaProdutoRecord, UUID> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.venda_produto.updated_date</code>.
     */
    public final TableField<VendaProdutoRecord, Timestamp> UPDATED_DATE = createField("updated_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.venda_produto.updated_user</code>.
     */
    public final TableField<VendaProdutoRecord, UUID> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.venda_produto.active</code>.
     */
    public final TableField<VendaProdutoRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.venda_produto.id</code>.
     */
    public final TableField<VendaProdutoRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.venda_produto.valor_unitario</code>.
     */
    public final TableField<VendaProdutoRecord, Double> VALOR_UNITARIO = createField("valor_unitario", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>public.venda_produto.quantidade</code>.
     */
    public final TableField<VendaProdutoRecord, Integer> QUANTIDADE = createField("quantidade", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.venda_produto.produto_id</code>.
     */
    public final TableField<VendaProdutoRecord, UUID> PRODUTO_ID = createField("produto_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.venda_produto.venda_id</code>.
     */
    public final TableField<VendaProdutoRecord, UUID> VENDA_ID = createField("venda_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * Create a <code>public.venda_produto</code> table reference
     */
    public VendaProduto() {
        this(DSL.name("venda_produto"), null);
    }

    /**
     * Create an aliased <code>public.venda_produto</code> table reference
     */
    public VendaProduto(String alias) {
        this(DSL.name(alias), VENDA_PRODUTO);
    }

    /**
     * Create an aliased <code>public.venda_produto</code> table reference
     */
    public VendaProduto(Name alias) {
        this(alias, VENDA_PRODUTO);
    }

    private VendaProduto(Name alias, Table<VendaProdutoRecord> aliased) {
        this(alias, aliased, null);
    }

    private VendaProduto(Name alias, Table<VendaProdutoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VENDA_PRODUTO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VendaProdutoRecord> getPrimaryKey() {
        return Keys.VENDA_PRODUTO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VendaProdutoRecord>> getKeys() {
        return Arrays.<UniqueKey<VendaProdutoRecord>>asList(Keys.VENDA_PRODUTO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VendaProdutoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VendaProdutoRecord, ?>>asList(Keys.VENDA_PRODUTO__VENDA_PRODUTO_PRODUTO_ID_FKEY, Keys.VENDA_PRODUTO__VENDA_PRODUTO_VENDA_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VendaProduto as(String alias) {
        return new VendaProduto(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VendaProduto as(Name alias) {
        return new VendaProduto(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VendaProduto rename(String name) {
        return new VendaProduto(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VendaProduto rename(Name name) {
        return new VendaProduto(name, null);
    }
}
