/*
 * This file is generated by jOOQ.
*/
package br.com.rodrigocardoso.database.tables;


import br.com.rodrigocardoso.database.Indexes;
import br.com.rodrigocardoso.database.Keys;
import br.com.rodrigocardoso.database.Public;
import br.com.rodrigocardoso.database.tables.records.VendaRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Venda extends TableImpl<VendaRecord> {

    private static final long serialVersionUID = -421327780;

    /**
     * The reference instance of <code>public.venda</code>
     */
    public static final Venda VENDA = new Venda();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VendaRecord> getRecordType() {
        return VendaRecord.class;
    }

    /**
     * The column <code>public.venda.created_date</code>.
     */
    public final TableField<VendaRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.venda.created_user</code>.
     */
    public final TableField<VendaRecord, UUID> CREATED_USER = createField("created_user", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.venda.updated_date</code>.
     */
    public final TableField<VendaRecord, Timestamp> UPDATED_DATE = createField("updated_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.venda.updated_user</code>.
     */
    public final TableField<VendaRecord, UUID> UPDATED_USER = createField("updated_user", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.venda.active</code>.
     */
    public final TableField<VendaRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.venda.id</code>.
     */
    public final TableField<VendaRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.venda.venda_dia_id</code>.
     */
    public final TableField<VendaRecord, UUID> VENDA_DIA_ID = createField("venda_dia_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.venda.pessoa_id</code>.
     */
    public final TableField<VendaRecord, UUID> PESSOA_ID = createField("pessoa_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * Create a <code>public.venda</code> table reference
     */
    public Venda() {
        this(DSL.name("venda"), null);
    }

    /**
     * Create an aliased <code>public.venda</code> table reference
     */
    public Venda(String alias) {
        this(DSL.name(alias), VENDA);
    }

    /**
     * Create an aliased <code>public.venda</code> table reference
     */
    public Venda(Name alias) {
        this(alias, VENDA);
    }

    private Venda(Name alias, Table<VendaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Venda(Name alias, Table<VendaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VENDA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VendaRecord> getPrimaryKey() {
        return Keys.VENDA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VendaRecord>> getKeys() {
        return Arrays.<UniqueKey<VendaRecord>>asList(Keys.VENDA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VendaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VendaRecord, ?>>asList(Keys.VENDA__VENDA_VENDA_DIA_ID_FKEY, Keys.VENDA__VENDA_PESSOA_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Venda as(String alias) {
        return new Venda(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Venda as(Name alias) {
        return new Venda(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Venda rename(String name) {
        return new Venda(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Venda rename(Name name) {
        return new Venda(name, null);
    }
}
