/*
 * This file is generated by jOOQ.
*/
package br.com.rodrigocardoso.database.tables.daos;


import br.com.rodrigocardoso.database.tables.Usuario;
import br.com.rodrigocardoso.database.tables.records.UsuarioRecord;

import java.sql.Timestamp;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsuarioDao extends DAOImpl<UsuarioRecord, br.com.rodrigocardoso.database.tables.pojos.Usuario, UUID> {

    /**
     * Create a new UsuarioDao without any configuration
     */
    public UsuarioDao() {
        super(Usuario.USUARIO, br.com.rodrigocardoso.database.tables.pojos.Usuario.class);
    }

    /**
     * Create a new UsuarioDao with an attached configuration
     */
    public UsuarioDao(Configuration configuration) {
        super(Usuario.USUARIO, br.com.rodrigocardoso.database.tables.pojos.Usuario.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected UUID getId(br.com.rodrigocardoso.database.tables.pojos.Usuario object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>created_date IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByCreatedDate(Timestamp... values) {
        return fetch(Usuario.USUARIO.CREATED_DATE, values);
    }

    /**
     * Fetch records that have <code>created_user IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByCreatedUser(UUID... values) {
        return fetch(Usuario.USUARIO.CREATED_USER, values);
    }

    /**
     * Fetch records that have <code>updated_date IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByUpdatedDate(Timestamp... values) {
        return fetch(Usuario.USUARIO.UPDATED_DATE, values);
    }

    /**
     * Fetch records that have <code>updated_user IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByUpdatedUser(UUID... values) {
        return fetch(Usuario.USUARIO.UPDATED_USER, values);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByActive(Boolean... values) {
        return fetch(Usuario.USUARIO.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchById(UUID... values) {
        return fetch(Usuario.USUARIO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public br.com.rodrigocardoso.database.tables.pojos.Usuario fetchOneById(UUID value) {
        return fetchOne(Usuario.USUARIO.ID, value);
    }

    /**
     * Fetch records that have <code>nome IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByNome(String... values) {
        return fetch(Usuario.USUARIO.NOME, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByEmail(String... values) {
        return fetch(Usuario.USUARIO.EMAIL, values);
    }

    /**
     * Fetch records that have <code>senha IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchBySenha(String... values) {
        return fetch(Usuario.USUARIO.SENHA, values);
    }

    /**
     * Fetch records that have <code>salt IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchBySalt(String... values) {
        return fetch(Usuario.USUARIO.SALT, values);
    }

    /**
     * Fetch records that have <code>user_token IN (values)</code>
     */
    public List<br.com.rodrigocardoso.database.tables.pojos.Usuario> fetchByUserToken(String... values) {
        return fetch(Usuario.USUARIO.USER_TOKEN, values);
    }
}
